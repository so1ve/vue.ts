// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures > __fixtures__/defineEmits/basic.vue 1`] = `
"<script setup lang="ts">
import type { Events } from "./basic-ts";

defineEmits(["foo", "baz", "qux", "quote\\""]);
</script>
"
`;

exports[`fixtures > __fixtures__/defineEmits/core#9541.vue 1`] = `
"<script setup lang="ts">
interface Base {
	(e: "change", id: number): void;
}
interface Emits extends Base {
	(e: "unChange", id: number): void;
}
const emit = defineEmits(["unChange", "change"]);

emit("change", 1);
</script>
"
`;

exports[`fixtures > __fixtures__/defineEmits/shorthand.vue 1`] = `
"<script setup lang="ts">
import type { Events } from "./shorthand-ts";

defineEmits(["foo", "bar", "quotes\\""]);
</script>
"
`;

exports[`fixtures > __fixtures__/defineProps/basic.vue 1`] = `
"<script
	setup
	lang="ts"
	generic="T extends string, U extends (string | number)[], I"
>
import type { SomeInterface } from "./basic-ts";

defineProps<
	{
string: string
optionalString?: string
stringUnion: "a" | "b"
genericExtendsString: string
array: string[]
genericArray: (string | number)[]
function: () => void
error: Error
} & {
emptyInterface: {
}
conditionalNumber: number extends boolean ? string : number
interface: {
aaa: 1
}
typeLiteral: {
foo: number
}
} & {
"1-1": string
"2-1": string
} & {
"1-1"?: "1-1OptionalMappedType" | undefined
"2-1"?: "2-1OptionalMappedType" | undefined
}
>();
</script>
"
`;

exports[`fixtures > __fixtures__/defineProps/core#8286.vue 1`] = `
"<script setup lang="ts">
import { ButtonHTMLAttributes } from "vue";

interface MyButtonProps extends ButtonHTMLAttributes {}

defineProps<{
'aria-activedescendant'?: string
'aria-atomic'?: boolean | 'true' | 'false'
'aria-autocomplete'?: 'none' | 'inline' | 'list' | 'both'
'aria-busy'?: boolean | 'true' | 'false'
'aria-checked'?: boolean | 'true' | 'false' | 'mixed'
'aria-colcount'?: number | string
'aria-colindex'?: number | string
'aria-colspan'?: number | string
'aria-controls'?: string
'aria-current'?: boolean | 'true' | 'false' | 'page' | 'step' | 'location' | 'date' | 'time'
'aria-describedby'?: string
'aria-details'?: string
'aria-disabled'?: boolean | 'true' | 'false'
'aria-dropeffect'?: 'none' | 'copy' | 'execute' | 'link' | 'move' | 'popup'
'aria-errormessage'?: string
'aria-expanded'?: boolean | 'true' | 'false'
'aria-flowto'?: string
'aria-grabbed'?: boolean | 'true' | 'false'
'aria-haspopup'?: boolean | 'true' | 'false' | 'menu' | 'listbox' | 'tree' | 'grid' | 'dialog'
'aria-hidden'?: boolean | 'true' | 'false'
'aria-invalid'?: boolean | 'true' | 'false' | 'grammar' | 'spelling'
'aria-keyshortcuts'?: string
'aria-label'?: string
'aria-labelledby'?: string
'aria-level'?: number | string
'aria-live'?: 'off' | 'assertive' | 'polite'
'aria-modal'?: boolean | 'true' | 'false'
'aria-multiline'?: boolean | 'true' | 'false'
'aria-multiselectable'?: boolean | 'true' | 'false'
'aria-orientation'?: 'horizontal' | 'vertical'
'aria-owns'?: string
'aria-placeholder'?: string
'aria-posinset'?: number | string
'aria-pressed'?: boolean | 'true' | 'false' | 'mixed'
'aria-readonly'?: boolean | 'true' | 'false'
'aria-relevant'?: 'additions' | 'additions removals' | 'additions text' | 'all' | 'removals' | 'removals additions' | 'removals text' | 'text' | 'text additions' | 'text removals'
'aria-required'?: boolean | 'true' | 'false'
'aria-roledescription'?: string
'aria-rowcount'?: number | string
'aria-rowindex'?: number | string
'aria-rowspan'?: number | string
'aria-selected'?: boolean | 'true' | 'false'
'aria-setsize'?: number | string
'aria-sort'?: 'none' | 'ascending' | 'descending' | 'other'
'aria-valuemax'?: number | string
'aria-valuemin'?: number | string
'aria-valuenow'?: number | string
'aria-valuetext'?: string
} & {
}>();
</script>
"
`;

exports[`fixtures > __fixtures__/defineProps/core#8468.vue 1`] = `
"<script setup lang="ts" generic="P extends Inputs">
import type { Inputs } from "./core#8468-props.ts";

defineProps<{
type: string
value: string
} | {
type: string
value: number
}>();
</script>
"
`;

exports[`fixtures > __fixtures__/defineProps/import-from-vue.vue 1`] = `
"<script setup lang="ts" generic="T extends string">
import type { Foo } from "./import-from-vue-vue.exclude.vue";

defineProps<{
foo: string
}>();
</script>
"
`;
