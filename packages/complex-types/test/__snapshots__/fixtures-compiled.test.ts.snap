// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures compiled > __fixtures__/defineEmits/basic.vue 1`] = `
"// basic.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "basic",
	emits: [
		"foo",
		"baz",
		"qux",
		"quote\\""
	],
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var basic = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { basic as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineEmits/core#9541.vue 1`] = `
"// core_9541.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#9541",
	emits: ["unChange", "change"],
	setup(__props, { expose: __expose, emit: __emit }) {
		__expose();
		const emit = __emit;
		emit("change", 1);
		const __returned__ = { emit };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_9541 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_9541 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineEmits/shorthand.vue 1`] = `
"// shorthand.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "shorthand",
	emits: [
		"foo",
		"bar",
		"quotes\\""
	],
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var shorthand = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { shorthand as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/basic.vue 1`] = `
"// basic.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var SomeEnum = /* @__PURE__ */ function(SomeEnum) {
	SomeEnum["One"] = "one";
	SomeEnum["Two"] = "two";
	SomeEnum[SomeEnum["Three"] = 3] = "Three";
	return SomeEnum;
}(SomeEnum || {});
var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "basic",
	props: {
		string: {
			type: String,
			required: true
		},
		optionalString: {
			type: String,
			required: false
		},
		stringUnion: {
			type: String,
			required: true
		},
		genericExtendsString: {
			type: String,
			required: true
		},
		array: {
			type: Array,
			required: true
		},
		genericArray: {
			type: Array,
			required: true
		},
		genericCondition: {
			type: [String, Number],
			required: true
		},
		function: {
			type: Function,
			required: true
		},
		error: {
			type: Object,
			required: true
		},
		null: { required: true },
		symbol: {
			type: Symbol,
			required: true
		},
		"quotes\\"": {
			type: String,
			required: true
		},
		enum: {
			type: [String, Number],
			required: true
		},
		emptyInterface: {
			type: Object,
			required: true
		},
		conditionalNumber: {
			type: Number,
			required: true
		},
		interface: {
			type: Object,
			required: true
		},
		typeLiteral: {
			type: Object,
			required: true
		},
		"1-1": {
			type: String,
			required: true
		},
		"1-2": {
			type: String,
			required: true
		},
		"2-1": {
			type: String,
			required: false
		},
		"2-2": {
			type: String,
			required: false
		}
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = { SomeEnum };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var basic = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { basic as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/core#8286.vue 1`] = `
"// core_8286.js
import { defineComponent, ButtonHTMLAttributes } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#8286",
	props: {
		autofocus: {
			type: [Boolean, String],
			required: false
		},
		disabled: {
			type: [Boolean, String],
			required: false
		},
		form: {
			type: String,
			required: false
		},
		formaction: {
			type: String,
			required: false
		},
		formenctype: {
			type: String,
			required: false
		},
		formmethod: {
			type: String,
			required: false
		},
		formnovalidate: {
			type: [Boolean, String],
			required: false
		},
		formtarget: {
			type: String,
			required: false
		},
		name: {
			type: String,
			required: false
		},
		type: {
			type: String,
			required: false
		},
		value: { required: false },
		innerHTML: {
			type: String,
			required: false
		},
		class: { required: true },
		style: {
			type: [String, Boolean],
			skipCheck: true,
			required: false
		},
		accesskey: {
			type: String,
			required: false
		},
		contenteditable: {
			type: [Boolean, String],
			required: false
		},
		contextmenu: {
			type: String,
			required: false
		},
		dir: {
			type: String,
			required: false
		},
		draggable: {
			type: [Boolean, String],
			required: false
		},
		hidden: {
			type: [Boolean, String],
			required: false
		},
		id: {
			type: String,
			required: false
		},
		inert: {
			type: [Boolean, String],
			required: false
		},
		lang: {
			type: String,
			required: false
		},
		placeholder: {
			type: String,
			required: false
		},
		spellcheck: {
			type: [Boolean, String],
			required: false
		},
		tabindex: {
			type: [String, Number],
			required: false
		},
		title: {
			type: String,
			required: false
		},
		translate: {
			type: String,
			required: false
		},
		radiogroup: {
			type: String,
			required: false
		},
		role: {
			type: String,
			required: false
		},
		about: {
			type: String,
			required: false
		},
		datatype: {
			type: String,
			required: false
		},
		inlist: { required: true },
		prefix: {
			type: String,
			required: false
		},
		property: {
			type: String,
			required: false
		},
		resource: {
			type: String,
			required: false
		},
		typeof: {
			type: String,
			required: false
		},
		vocab: {
			type: String,
			required: false
		},
		autocapitalize: {
			type: String,
			required: false
		},
		autocorrect: {
			type: String,
			required: false
		},
		autosave: {
			type: String,
			required: false
		},
		color: {
			type: String,
			required: false
		},
		itemprop: {
			type: String,
			required: false
		},
		itemscope: {
			type: [Boolean, String],
			required: false
		},
		itemtype: {
			type: String,
			required: false
		},
		itemid: {
			type: String,
			required: false
		},
		itemref: {
			type: String,
			required: false
		},
		results: {
			type: [String, Number],
			required: false
		},
		security: {
			type: String,
			required: false
		},
		unselectable: {
			type: String,
			required: false
		},
		inputmode: {
			type: String,
			required: false
		},
		is: {
			type: String,
			required: false
		},
		"aria-activedescendant": {
			type: String,
			required: false
		},
		"aria-atomic": {
			type: [Boolean, String],
			required: false
		},
		"aria-autocomplete": {
			type: String,
			required: false
		},
		"aria-busy": {
			type: [Boolean, String],
			required: false
		},
		"aria-checked": {
			type: [Boolean, String],
			required: false
		},
		"aria-colcount": {
			type: [String, Number],
			required: false
		},
		"aria-colindex": {
			type: [String, Number],
			required: false
		},
		"aria-colspan": {
			type: [String, Number],
			required: false
		},
		"aria-controls": {
			type: String,
			required: false
		},
		"aria-current": {
			type: [Boolean, String],
			required: false
		},
		"aria-describedby": {
			type: String,
			required: false
		},
		"aria-details": {
			type: String,
			required: false
		},
		"aria-disabled": {
			type: [Boolean, String],
			required: false
		},
		"aria-dropeffect": {
			type: String,
			required: false
		},
		"aria-errormessage": {
			type: String,
			required: false
		},
		"aria-expanded": {
			type: [Boolean, String],
			required: false
		},
		"aria-flowto": {
			type: String,
			required: false
		},
		"aria-grabbed": {
			type: [Boolean, String],
			required: false
		},
		"aria-haspopup": {
			type: [Boolean, String],
			required: false
		},
		"aria-hidden": {
			type: [Boolean, String],
			required: false
		},
		"aria-invalid": {
			type: [Boolean, String],
			required: false
		},
		"aria-keyshortcuts": {
			type: String,
			required: false
		},
		"aria-label": {
			type: String,
			required: false
		},
		"aria-labelledby": {
			type: String,
			required: false
		},
		"aria-level": {
			type: [String, Number],
			required: false
		},
		"aria-live": {
			type: String,
			required: false
		},
		"aria-modal": {
			type: [Boolean, String],
			required: false
		},
		"aria-multiline": {
			type: [Boolean, String],
			required: false
		},
		"aria-multiselectable": {
			type: [Boolean, String],
			required: false
		},
		"aria-orientation": {
			type: String,
			required: false
		},
		"aria-owns": {
			type: String,
			required: false
		},
		"aria-placeholder": {
			type: String,
			required: false
		},
		"aria-posinset": {
			type: [String, Number],
			required: false
		},
		"aria-pressed": {
			type: [Boolean, String],
			required: false
		},
		"aria-readonly": {
			type: [Boolean, String],
			required: false
		},
		"aria-relevant": {
			type: String,
			required: false
		},
		"aria-required": {
			type: [Boolean, String],
			required: false
		},
		"aria-roledescription": {
			type: String,
			required: false
		},
		"aria-rowcount": {
			type: [String, Number],
			required: false
		},
		"aria-rowindex": {
			type: [String, Number],
			required: false
		},
		"aria-rowspan": {
			type: [String, Number],
			required: false
		},
		"aria-selected": {
			type: [Boolean, String],
			required: false
		},
		"aria-setsize": {
			type: [String, Number],
			required: false
		},
		"aria-sort": {
			type: String,
			required: false
		},
		"aria-valuemax": {
			type: [String, Number],
			required: false
		},
		"aria-valuemin": {
			type: [String, Number],
			required: false
		},
		"aria-valuenow": {
			type: [String, Number],
			required: false
		},
		"aria-valuetext": {
			type: String,
			required: false
		},
		onCopy: {
			type: Function,
			required: false
		},
		onCut: {
			type: Function,
			required: false
		},
		onPaste: {
			type: Function,
			required: false
		},
		onCompositionend: {
			type: Function,
			required: false
		},
		onCompositionstart: {
			type: Function,
			required: false
		},
		onCompositionupdate: {
			type: Function,
			required: false
		},
		onDrag: {
			type: Function,
			required: false
		},
		onDragend: {
			type: Function,
			required: false
		},
		onDragenter: {
			type: Function,
			required: false
		},
		onDragexit: {
			type: Function,
			required: false
		},
		onDragleave: {
			type: Function,
			required: false
		},
		onDragover: {
			type: Function,
			required: false
		},
		onDragstart: {
			type: Function,
			required: false
		},
		onDrop: {
			type: Function,
			required: false
		},
		onFocus: {
			type: Function,
			required: false
		},
		onFocusin: {
			type: Function,
			required: false
		},
		onFocusout: {
			type: Function,
			required: false
		},
		onBlur: {
			type: Function,
			required: false
		},
		onChange: {
			type: Function,
			required: false
		},
		onBeforeinput: {
			type: Function,
			required: false
		},
		onInput: {
			type: Function,
			required: false
		},
		onReset: {
			type: Function,
			required: false
		},
		onSubmit: {
			type: Function,
			required: false
		},
		onInvalid: {
			type: Function,
			required: false
		},
		onLoad: {
			type: Function,
			required: false
		},
		onError: {
			type: Function,
			required: false
		},
		onKeydown: {
			type: Function,
			required: false
		},
		onKeypress: {
			type: Function,
			required: false
		},
		onKeyup: {
			type: Function,
			required: false
		},
		onAuxclick: {
			type: Function,
			required: false
		},
		onClick: {
			type: Function,
			required: false
		},
		onContextmenu: {
			type: Function,
			required: false
		},
		onDblclick: {
			type: Function,
			required: false
		},
		onMousedown: {
			type: Function,
			required: false
		},
		onMouseenter: {
			type: Function,
			required: false
		},
		onMouseleave: {
			type: Function,
			required: false
		},
		onMousemove: {
			type: Function,
			required: false
		},
		onMouseout: {
			type: Function,
			required: false
		},
		onMouseover: {
			type: Function,
			required: false
		},
		onMouseup: {
			type: Function,
			required: false
		},
		onAbort: {
			type: Function,
			required: false
		},
		onCanplay: {
			type: Function,
			required: false
		},
		onCanplaythrough: {
			type: Function,
			required: false
		},
		onDurationchange: {
			type: Function,
			required: false
		},
		onEmptied: {
			type: Function,
			required: false
		},
		onEncrypted: {
			type: Function,
			required: false
		},
		onEnded: {
			type: Function,
			required: false
		},
		onLoadeddata: {
			type: Function,
			required: false
		},
		onLoadedmetadata: {
			type: Function,
			required: false
		},
		onLoadstart: {
			type: Function,
			required: false
		},
		onPause: {
			type: Function,
			required: false
		},
		onPlay: {
			type: Function,
			required: false
		},
		onPlaying: {
			type: Function,
			required: false
		},
		onProgress: {
			type: Function,
			required: false
		},
		onRatechange: {
			type: Function,
			required: false
		},
		onSeeked: {
			type: Function,
			required: false
		},
		onSeeking: {
			type: Function,
			required: false
		},
		onStalled: {
			type: Function,
			required: false
		},
		onSuspend: {
			type: Function,
			required: false
		},
		onTimeupdate: {
			type: Function,
			required: false
		},
		onVolumechange: {
			type: Function,
			required: false
		},
		onWaiting: {
			type: Function,
			required: false
		},
		onSelect: {
			type: Function,
			required: false
		},
		onScroll: {
			type: Function,
			required: false
		},
		onScrollend: {
			type: Function,
			required: false
		},
		onTouchcancel: {
			type: Function,
			required: false
		},
		onTouchend: {
			type: Function,
			required: false
		},
		onTouchmove: {
			type: Function,
			required: false
		},
		onTouchstart: {
			type: Function,
			required: false
		},
		onPointerdown: {
			type: Function,
			required: false
		},
		onPointermove: {
			type: Function,
			required: false
		},
		onPointerup: {
			type: Function,
			required: false
		},
		onPointercancel: {
			type: Function,
			required: false
		},
		onPointerenter: {
			type: Function,
			required: false
		},
		onPointerleave: {
			type: Function,
			required: false
		},
		onPointerover: {
			type: Function,
			required: false
		},
		onPointerout: {
			type: Function,
			required: false
		},
		onWheel: {
			type: Function,
			required: false
		},
		onAnimationstart: {
			type: Function,
			required: false
		},
		onAnimationend: {
			type: Function,
			required: false
		},
		onAnimationiteration: {
			type: Function,
			required: false
		},
		onTransitionend: {
			type: Function,
			required: false
		},
		onTransitionstart: {
			type: Function,
			required: false
		}
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = { ButtonHTMLAttributes };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_8286 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_8286 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/core#8468.vue 1`] = `
"// core_8468.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#8468",
	props: {
		type: {
			type: String,
			required: true
		},
		value: {
			type: [String, Number],
			required: true
		}
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_8468 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_8468 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/core#9774.vue 1`] = `
"// core_9774.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#9774",
	props: { a: {
		type: String,
		required: false
	} },
	setup(__props, { expose: __expose }) {
		__expose();
		const testProps = { a: { type: String } };
		const __returned__ = { testProps };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_9774 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_9774 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/import-from-vue.vue 1`] = `
"// import-from-vue.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "import-from-vue",
	props: { foo: {
		type: String,
		required: true
	} },
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var importFromVue = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { importFromVue as default };
"
`;
