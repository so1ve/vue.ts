// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`fixtures compiled > __fixtures__/defineEmits/basic.vue 1`] = `
"// basic.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "basic",
	emits: [
		"foo",
		"baz",
		"qux",
		"quote\\""
	],
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var basic = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { basic as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineEmits/core#9541.vue 1`] = `
"// core_9541.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#9541",
	emits: ["unChange", "change"],
	setup(__props, { expose: __expose, emit: __emit }) {
		__expose();
		const emit = __emit;
		emit("change", 1);
		const __returned__ = { emit };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_9541 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_9541 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineEmits/shorthand.vue 1`] = `
"// shorthand.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "shorthand",
	emits: [
		"foo",
		"bar",
		"quotes\\""
	],
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var shorthand = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { shorthand as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/basic.vue 1`] = `
"// basic.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "basic",
	props: {
		string: {
			type: String,
			required: true
		},
		optionalString: {
			type: String,
			required: false
		},
		stringUnion: {
			type: String,
			required: true
		},
		genericExtendsString: {
			type: String,
			required: true
		},
		array: {
			type: Array,
			required: true
		},
		genericArray: {
			type: Array,
			required: true
		},
		function: {
			type: Function,
			required: true
		},
		error: { required: true },
		emptyInterface: { required: true },
		conditionalNumber: { required: true },
		interface: {
			type: Object,
			required: true
		},
		typeLiteral: {
			type: Object,
			required: true
		},
		"1-1": { required: false },
		"2-1": { required: false }
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var basic = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { basic as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/core#8286.vue 1`] = `
"// core_8286.js
import { defineComponent, ButtonHTMLAttributes } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#8286",
	props: {
<<<<<<< HEAD
		autofocus: { required: false },
		disabled: { required: false },
		form: { required: false },
		formaction: { required: false },
		formenctype: { required: false },
		formmethod: { required: false },
		formnovalidate: { required: false },
		formtarget: { required: false },
		name: { required: false },
		type: { required: false },
		value: { required: false },
		innerHTML: { required: false },
		class: { required: false },
		style: { required: false },
		accesskey: { required: false },
		contenteditable: { required: false },
		contextmenu: { required: false },
		dir: { required: false },
		draggable: { required: false },
		hidden: { required: false },
		id: { required: false },
		inert: { required: false },
		lang: { required: false },
		placeholder: { required: false },
		spellcheck: { required: false },
		tabindex: { required: false },
		title: { required: false },
		translate: { required: false },
		radiogroup: { required: false },
		role: { required: false },
		about: { required: false },
		datatype: { required: false },
		inlist: { required: false },
		prefix: { required: false },
		property: { required: false },
		resource: { required: false },
		typeof: { required: false },
		vocab: { required: false },
		autocapitalize: { required: false },
		autocorrect: { required: false },
		autosave: { required: false },
		color: { required: false },
		itemprop: { required: false },
		itemscope: { required: false },
		itemtype: { required: false },
		itemid: { required: false },
		itemref: { required: false },
		results: { required: false },
		security: { required: false },
		unselectable: { required: false },
		inputmode: { required: false },
		is: { required: false },
		"aria-activedescendant": { required: false },
		"aria-atomic": { required: false },
		"aria-autocomplete": { required: false },
		"aria-busy": { required: false },
		"aria-checked": { required: false },
		"aria-colcount": { required: false },
		"aria-colindex": { required: false },
		"aria-colspan": { required: false },
		"aria-controls": { required: false },
		"aria-current": { required: false },
		"aria-describedby": { required: false },
		"aria-details": { required: false },
		"aria-disabled": { required: false },
		"aria-dropeffect": { required: false },
		"aria-errormessage": { required: false },
		"aria-expanded": { required: false },
		"aria-flowto": { required: false },
		"aria-grabbed": { required: false },
		"aria-haspopup": { required: false },
		"aria-hidden": { required: false },
		"aria-invalid": { required: false },
		"aria-keyshortcuts": { required: false },
		"aria-label": { required: false },
		"aria-labelledby": { required: false },
		"aria-level": { required: false },
		"aria-live": { required: false },
		"aria-modal": { required: false },
		"aria-multiline": { required: false },
		"aria-multiselectable": { required: false },
		"aria-orientation": { required: false },
		"aria-owns": { required: false },
		"aria-placeholder": { required: false },
		"aria-posinset": { required: false },
		"aria-pressed": { required: false },
		"aria-readonly": { required: false },
		"aria-relevant": { required: false },
		"aria-required": { required: false },
		"aria-roledescription": { required: false },
		"aria-rowcount": { required: false },
		"aria-rowindex": { required: false },
		"aria-rowspan": { required: false },
		"aria-selected": { required: false },
		"aria-setsize": { required: false },
		"aria-sort": { required: false },
		"aria-valuemax": { required: false },
		"aria-valuemin": { required: false },
		"aria-valuenow": { required: false },
		"aria-valuetext": { required: false },
		onCopy: { required: false },
		onCut: { required: false },
		onPaste: { required: false },
		onCompositionend: { required: false },
		onCompositionstart: { required: false },
		onCompositionupdate: { required: false },
		onDrag: { required: false },
		onDragend: { required: false },
		onDragenter: { required: false },
		onDragexit: { required: false },
		onDragleave: { required: false },
		onDragover: { required: false },
		onDragstart: { required: false },
		onDrop: { required: false },
		onFocus: { required: false },
		onFocusin: { required: false },
		onFocusout: { required: false },
		onBlur: { required: false },
		onChange: { required: false },
		onBeforeinput: { required: false },
		onInput: { required: false },
		onReset: { required: false },
		onSubmit: { required: false },
		onInvalid: { required: false },
		onLoad: { required: false },
		onError: { required: false },
		onKeydown: { required: false },
		onKeypress: { required: false },
		onKeyup: { required: false },
		onAuxclick: { required: false },
		onClick: { required: false },
		onContextmenu: { required: false },
		onDblclick: { required: false },
		onMousedown: { required: false },
		onMouseenter: { required: false },
		onMouseleave: { required: false },
		onMousemove: { required: false },
		onMouseout: { required: false },
		onMouseover: { required: false },
		onMouseup: { required: false },
		onAbort: { required: false },
		onCanplay: { required: false },
		onCanplaythrough: { required: false },
		onDurationchange: { required: false },
		onEmptied: { required: false },
		onEncrypted: { required: false },
		onEnded: { required: false },
		onLoadeddata: { required: false },
		onLoadedmetadata: { required: false },
		onLoadstart: { required: false },
		onPause: { required: false },
		onPlay: { required: false },
		onPlaying: { required: false },
		onProgress: { required: false },
		onRatechange: { required: false },
		onSeeked: { required: false },
		onSeeking: { required: false },
		onStalled: { required: false },
		onSuspend: { required: false },
		onTimeupdate: { required: false },
		onVolumechange: { required: false },
		onWaiting: { required: false },
		onSelect: { required: false },
		onScroll: { required: false },
		onScrollend: { required: false },
		onTouchcancel: { required: false },
		onTouchend: { required: false },
		onTouchmove: { required: false },
		onTouchstart: { required: false },
		onPointerdown: { required: false },
		onPointermove: { required: false },
		onPointerup: { required: false },
		onPointercancel: { required: false },
		onPointerenter: { required: false },
		onPointerleave: { required: false },
		onPointerover: { required: false },
		onPointerout: { required: false },
		onWheel: { required: false },
		onAnimationstart: { required: false },
		onAnimationend: { required: false },
		onAnimationiteration: { required: false },
		onTransitionend: { required: false },
		onTransitionstart: { required: false }
=======
		"aria-activedescendant": {
			type: String,
			required: false
		},
		"aria-atomic": {
			type: [Boolean, String],
			required: false
		},
		"aria-autocomplete": {
			type: String,
			required: false
		},
		"aria-busy": {
			type: [Boolean, String],
			required: false
		},
		"aria-checked": {
			type: [Boolean, String],
			required: false
		},
		"aria-colcount": {
			type: [Number, String],
			required: false
		},
		"aria-colindex": {
			type: [Number, String],
			required: false
		},
		"aria-colspan": {
			type: [Number, String],
			required: false
		},
		"aria-controls": {
			type: String,
			required: false
		},
		"aria-current": {
			type: [Boolean, String],
			required: false
		},
		"aria-describedby": {
			type: String,
			required: false
		},
		"aria-details": {
			type: String,
			required: false
		},
		"aria-disabled": {
			type: [Boolean, String],
			required: false
		},
		"aria-dropeffect": {
			type: String,
			required: false
		},
		"aria-errormessage": {
			type: String,
			required: false
		},
		"aria-expanded": {
			type: [Boolean, String],
			required: false
		},
		"aria-flowto": {
			type: String,
			required: false
		},
		"aria-grabbed": {
			type: [Boolean, String],
			required: false
		},
		"aria-haspopup": {
			type: [Boolean, String],
			required: false
		},
		"aria-hidden": {
			type: [Boolean, String],
			required: false
		},
		"aria-invalid": {
			type: [Boolean, String],
			required: false
		},
		"aria-keyshortcuts": {
			type: String,
			required: false
		},
		"aria-label": {
			type: String,
			required: false
		},
		"aria-labelledby": {
			type: String,
			required: false
		},
		"aria-level": {
			type: [Number, String],
			required: false
		},
		"aria-live": {
			type: String,
			required: false
		},
		"aria-modal": {
			type: [Boolean, String],
			required: false
		},
		"aria-multiline": {
			type: [Boolean, String],
			required: false
		},
		"aria-multiselectable": {
			type: [Boolean, String],
			required: false
		},
		"aria-orientation": {
			type: String,
			required: false
		},
		"aria-owns": {
			type: String,
			required: false
		},
		"aria-placeholder": {
			type: String,
			required: false
		},
		"aria-posinset": {
			type: [Number, String],
			required: false
		},
		"aria-pressed": {
			type: [Boolean, String],
			required: false
		},
		"aria-readonly": {
			type: [Boolean, String],
			required: false
		},
		"aria-relevant": {
			type: String,
			required: false
		},
		"aria-required": {
			type: [Boolean, String],
			required: false
		},
		"aria-roledescription": {
			type: String,
			required: false
		},
		"aria-rowcount": {
			type: [Number, String],
			required: false
		},
		"aria-rowindex": {
			type: [Number, String],
			required: false
		},
		"aria-rowspan": {
			type: [Number, String],
			required: false
		},
		"aria-selected": {
			type: [Boolean, String],
			required: false
		},
		"aria-setsize": {
			type: [Number, String],
			required: false
		},
		"aria-sort": {
			type: String,
			required: false
		},
		"aria-valuemax": {
			type: [Number, String],
			required: false
		},
		"aria-valuemin": {
			type: [Number, String],
			required: false
		},
		"aria-valuenow": {
			type: [Number, String],
			required: false
		},
		"aria-valuetext": {
			type: String,
			required: false
<<<<<<< HEAD
		},
		innerHTML: {
			type: String,
			required: false
		},
		class: { required: false },
		style: {
			type: [Boolean, String],
			skipCheck: true,
			required: false
		},
		accesskey: {
			type: String,
			required: false
		},
		contenteditable: {
			type: [Boolean, String],
			required: false
		},
		contextmenu: {
			type: String,
			required: false
		},
		dir: {
			type: String,
			required: false
		},
		draggable: {
			type: [Boolean, String],
			required: false
		},
		hidden: {
			type: [Boolean, String],
			required: false
		},
		id: {
			type: String,
			required: false
		},
		inert: {
			type: [Boolean, String],
			required: false
		},
		lang: {
			type: String,
			required: false
		},
		placeholder: {
			type: String,
			required: false
		},
		spellcheck: {
			type: [Boolean, String],
			required: false
		},
		tabindex: {
			type: [Number, String],
			required: false
		},
		title: {
			type: String,
			required: false
		},
		translate: {
			type: String,
			required: false
		},
		radiogroup: {
			type: String,
			required: false
		},
		role: {
			type: String,
			required: false
		},
		about: {
			type: String,
			required: false
		},
		datatype: {
			type: String,
			required: false
		},
		inlist: { required: false },
		prefix: {
			type: String,
			required: false
		},
		property: {
			type: String,
			required: false
		},
		resource: {
			type: String,
			required: false
		},
		typeof: {
			type: String,
			required: false
		},
		vocab: {
			type: String,
			required: false
		},
		autocapitalize: {
			type: String,
			required: false
		},
		autocorrect: {
			type: String,
			required: false
		},
		autosave: {
			type: String,
			required: false
		},
		color: {
			type: String,
			required: false
		},
		itemprop: {
			type: String,
			required: false
		},
		itemscope: {
			type: [Boolean, String],
			required: false
		},
		itemtype: {
			type: String,
			required: false
		},
		itemid: {
			type: String,
			required: false
		},
		itemref: {
			type: String,
			required: false
		},
		results: {
			type: [Number, String],
			required: false
		},
		security: {
			type: String,
			required: false
		},
		unselectable: {
			type: String,
			required: false
		},
		inputmode: {
			type: String,
			required: false
		},
		is: {
			type: String,
			required: false
		},
		autofocus: {
			type: [Boolean, String],
			required: false
		},
		disabled: {
			type: [Boolean, String],
			required: false
		},
		form: {
			type: String,
			required: false
		},
		formaction: {
			type: String,
			required: false
		},
		formenctype: {
			type: String,
			required: false
		},
		formmethod: {
			type: String,
			required: false
		},
		formnovalidate: {
			type: [Boolean, String],
			required: false
		},
		formtarget: {
			type: String,
			required: false
		},
		name: {
			type: String,
			required: false
		},
		type: {
			type: String,
			required: false
		},
		value: { required: false }
>>>>>>> 705bc02 (wip)
=======
		}
>>>>>>> 57be219 (the fix)
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = { ButtonHTMLAttributes };
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_8286 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_8286 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/core#8468.vue 1`] = `
"// core_8468.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "core#8468",
	props: {
		type: {
			type: String,
			required: true
		},
		value: {
			type: [String, Number],
			required: true
		}
	},
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var core_8468 = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { core_8468 as default };
"
`;

exports[`fixtures compiled > __fixtures__/defineProps/import-from-vue.vue 1`] = `
"// import-from-vue.js
import { defineComponent } from 'vue';
import _export_sfc from '[NULL]/plugin-vue/export-helper';

var _sfc_main = /* @__PURE__ */ defineComponent({
	__name: "import-from-vue",
	props: { foo: {
		type: String,
		required: true
	} },
	setup(__props, { expose: __expose }) {
		__expose();
		const __returned__ = {};
		Object.defineProperty(__returned__, "__isScriptSetup", {
			enumerable: false,
			value: true
		});
		return __returned__;
	}
});

var importFromVue = /* @__PURE__ */ _export_sfc(_sfc_main, [__FILE__]);

export { importFromVue as default };
"
`;
